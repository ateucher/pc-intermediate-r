[
  {
    "objectID": "workflows.html#introductions",
    "href": "workflows.html#introductions",
    "title": "Creating Efficient Workflows in R",
    "section": "Introductions",
    "text": "Introductions\n\n\n\nMe: Andy Teucher\n\n andyteucher.ca\n ateucher\n andyteucher\n andy-teucher\n\nYourselves\n\nName\nWhere you are\nWhat you work on\nHardest thing about R"
  },
  {
    "objectID": "workflows.html#resources",
    "href": "workflows.html#resources",
    "title": "Creating Efficient Workflows in R",
    "section": "Resources",
    "text": "Resources\n\nWorkshop website: https://andyteucher.ca/pc-intermediate-r/\n\nWTF Book: https://rstats.wtf/"
  },
  {
    "objectID": "workflows.html#project-oriented-workflows",
    "href": "workflows.html#project-oriented-workflows",
    "title": "Creating Efficient Workflows in R",
    "section": "Project-oriented workflows",
    "text": "Project-oriented workflows\n\nConcept of a project \nProject structure\nEmbrace the blank slate \nNaming things\nFile organization"
  },
  {
    "objectID": "workflows.html#personal-r-administration",
    "href": "workflows.html#personal-r-administration",
    "title": "Creating Efficient Workflows in R",
    "section": "Personal R administration",
    "text": "Personal R administration\n\nWhere do packages live?\nInstalling and updating packages\nR Startup\n.Rprofile and .Renviron files"
  },
  {
    "objectID": "workflows.html#efficient-use-of-your-ide",
    "href": "workflows.html#efficient-use-of-your-ide",
    "title": "Creating Efficient Workflows in R",
    "section": "Efficient use of your IDE",
    "text": "Efficient use of your IDE\n\nCustomizing your IDE\nKeyboard shortcuts\nCommand palette\nTab completion\nAutoformatting code\nGetting help: Reprexes"
  },
  {
    "objectID": "workflows.html#layout",
    "href": "workflows.html#layout",
    "title": "Creating Efficient Workflows in R",
    "section": "Layout",
    "text": "Layout\n\n\nhttps://github.com/posit-dev/positron-website/pull/116/"
  },
  {
    "objectID": "workflows.html#layout-1",
    "href": "workflows.html#layout-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Layout",
    "text": "Layout\n\n\nhttps://github.com/posit-dev/positron-website/pull/116/\n\n\nThese UI elements are the most novel for RStudio users:\nThe Activity bar provides access to different functional capabilities of Positron. Clicking here changes what appears in the Primary side bar. The Primary side bar displays context-specific content based on which icon is clicked in the Activity bar."
  },
  {
    "objectID": "workflows.html#keyboard-shortcuts",
    "href": "workflows.html#keyboard-shortcuts",
    "title": "Creating Efficient Workflows in R",
    "section": "Keyboard shortcuts",
    "text": "Keyboard shortcuts\nEnable Rstudio keyboard shortcuts via:\nSettings &gt; Workbench &gt; Keybindings: Rstudio Keybindings"
  },
  {
    "objectID": "workflows.html#command-palette",
    "href": "workflows.html#command-palette",
    "title": "Creating Efficient Workflows in R",
    "section": "Command palette",
    "text": "Command palette\n\nAccess all the things\n Ctrl + Shift + P"
  },
  {
    "objectID": "workflows.html#extensions",
    "href": "workflows.html#extensions",
    "title": "Creating Efficient Workflows in R",
    "section": "Extensions",
    "text": "Extensions\n\n\n\nPre-installed\n\nQuarto\nAir\n\n\nOther extensions\n\nRainbow csv\nvscode-pdf\nThemes\n\n\n\nCommand palette: ‚Äúinstall‚Äù. Search ‚Äútomorrow night‚Äù."
  },
  {
    "objectID": "workflows.html#data-explorer",
    "href": "workflows.html#data-explorer",
    "title": "Creating Efficient Workflows in R",
    "section": "Data Explorer",
    "text": "Data Explorer"
  },
  {
    "objectID": "workflows.html#learning-objectives",
    "href": "workflows.html#learning-objectives",
    "title": "Creating Efficient Workflows in R",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nEstablish the concept of the project as the basic organizational unit of work.\nApply best practices in and leverage benefits of using a project-oriented workflow.\n\n\nCreating robust file paths that travel well in time and space.\nConstructing human and machine readable file names that sort nicely.\nDifferentiating workflow elements, analysis inputs, and analysis outputs in project structure to create navigable programming interfaces.\nRestarting R frequently, with a blank slate."
  },
  {
    "objectID": "workflows.html#prerequisites",
    "href": "workflows.html#prerequisites",
    "title": "Creating Efficient Workflows in R",
    "section": "Prerequisites",
    "text": "Prerequisites\n\ninstall.packages(c(\"tidyverse\", \"devtools\"))\n\ndevtools::install_github(\"r-lib/usethis\")"
  },
  {
    "objectID": "workflows.html#be-organized-as-you-go-not-tomorrow",
    "href": "workflows.html#be-organized-as-you-go-not-tomorrow",
    "title": "Creating Efficient Workflows in R",
    "section": "Be organized as you go, not ‚Äútomorrow‚Äù",
    "text": "Be organized as you go, not ‚Äútomorrow‚Äù\n\n\nDon‚Äôt fret over past mistakes.\n\n\n\n\nRaise the bar for new work."
  },
  {
    "objectID": "workflows.html#prerequisite-save-code-in-scripts",
    "href": "workflows.html#prerequisite-save-code-in-scripts",
    "title": "Creating Efficient Workflows in R",
    "section": "Prerequisite: Save code in scripts",
    "text": "Prerequisite: Save code in scripts\nSaving code is an absolute requirement for reproducibility. (Future you, future us)\n\nSave commands as ‚Äúscripts‚Äù (.R) or ‚Äúnotebooks‚Äù (.Rmd).\nIt doesn‚Äôt have to be polished.\nJust save it!\nEverything that really matters should be achieved through code that you save\nContrast: Series of unrecorded mouse clicks\n\nThe process is important, the product is just an outcome\n\nOutputs should be treated as disposable\nScripts are the source of truth"
  },
  {
    "objectID": "workflows.html#adopt-a-project-oriented-workflow",
    "href": "workflows.html#adopt-a-project-oriented-workflow",
    "title": "Creating Efficient Workflows in R",
    "section": "Adopt a project-oriented workflow",
    "text": "Adopt a project-oriented workflow\n\n\n\nWhy\n\nwork on more than 1 thing at a time\ncollaborate, communicate, distribute\nstart and stop safely\n\n\n\n\nHow\n\ndedicated directory\nRStudio Project or Positron Workspace\nGit repo, probably syncing to a remote\n\n\n\nProject-oriented workflows"
  },
  {
    "objectID": "workflows.html#if-the-top-of-your-script-is",
    "href": "workflows.html#if-the-top-of-your-script-is",
    "title": "Creating Efficient Workflows in R",
    "section": "If the top of your script is",
    "text": "If the top of your script is\n\n\nsetwd(\"C:/Users/andy/path/that/only/I/have\")\nrm(list = ls())\n\n\nThere is another path.\n\n\nProject-oriented workflow designs this away. üôå\n\n\nProject-oriented workflows"
  },
  {
    "objectID": "workflows.html#organize-your-work-into-projects",
    "href": "workflows.html#organize-your-work-into-projects",
    "title": "Creating Efficient Workflows in R",
    "section": "Organize your work into projects",
    "text": "Organize your work into projects\nOne folder per project.\n\nReport? R package? Chapter? Website? Whatever.\nCan be the same unit as a GitHub Repo.\nIf using RStudio, it‚Äôs Project (capital P)\nIf using Positron, it‚Äôs Workspace\nEach Project gets its own R instance\nR starts at the project root working directory: all paths are relative to the project‚Äôs folder.\n\n\nProject-oriented workflows"
  },
  {
    "objectID": "workflows.html#organize-your-work-into-projects-1",
    "href": "workflows.html#organize-your-work-into-projects-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Organize your work into projects",
    "text": "Organize your work into projects\n\n\nmy-project/\n‚îú‚îÄ‚îÄ 01_read-data.R\n‚îú‚îÄ‚îÄ 02_clean-data.R\n‚îú‚îÄ‚îÄ 03_analysis.R\n‚îú‚îÄ‚îÄ 04_output.R\n‚îú‚îÄ‚îÄ R\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ data\n‚îÇ   ‚îú‚îÄ‚îÄ derived_data\n‚îÇ   ‚îî‚îÄ‚îÄ raw_data\n‚îú‚îÄ‚îÄ outputs\n‚îî‚îÄ‚îÄ paper\n    ‚îú‚îÄ‚îÄ paper.qmd\n    ‚îî‚îÄ‚îÄ references.bib\n\n\n\nProject-oriented workflows"
  },
  {
    "objectID": "workflows.html#what-does-it-mean-to-be-an-rstudio-project",
    "href": "workflows.html#what-does-it-mean-to-be-an-rstudio-project",
    "title": "Creating Efficient Workflows in R",
    "section": "What does it mean to be an RStudio Project?",
    "text": "What does it mean to be an RStudio Project?\nOpen Project = dedicated instance of RStudio\n\ndedicated R process\nfile browser pointed at Project directory\nworking directory set to Project directory\n\n\n\nRStudio leaves notes to itself in foo.Rproj"
  },
  {
    "objectID": "workflows.html#what-does-it-mean-to-be-a-positron-project-workspace",
    "href": "workflows.html#what-does-it-mean-to-be-a-positron-project-workspace",
    "title": "Creating Efficient Workflows in R",
    "section": "What does it mean to be a Positron Project Workspace?",
    "text": "What does it mean to be a Positron Project Workspace?\nOpen Project = dedicated instance of Positron\n\ndedicated R process\nfile browser pointed at Project directory\nworking directory set to Project directory\n\n\n\nOften just a project folder that‚Äôs been opened in its own window via Open Folder or similar\n\n.git/ directory\n.Rproj file\n.vscode/settings.json file\n_quarto.yml file\nDESCRIPTION file\nrenv.lock file\n.here file"
  },
  {
    "objectID": "workflows.html#practice-safe-paths",
    "href": "workflows.html#practice-safe-paths",
    "title": "Creating Efficient Workflows in R",
    "section": "Practice ‚Äúsafe paths‚Äù",
    "text": "Practice ‚Äúsafe paths‚Äù\nThe chance of setwd() having the desired effect ‚Äì making the file paths work ‚Äì for anyone besides its author is ~0%.\nlibrary(ggplot2)\nsetwd(\"/Users/andy/cuddly_broccoli/verbose/foofy/data\")\ndf &lt;- read.csv(‚Äúraw_foofy_data.csv‚Äù)\np &lt;- ggplot(df, aes(x, y)) + geom_point()\nggsave(\"/Users/andy/cuddly_broccoi/ambiguous/fig.png\")\n It‚Äôs also unlikely to work for the author one or two years or computers from now.\nHard-wired, absolute paths, especially when sprinkled throughout the code, make a project brittle. Such code does not travel well across time or space."
  },
  {
    "objectID": "workflows.html#practice-safe-paths-1",
    "href": "workflows.html#practice-safe-paths-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Practice ‚Äúsafe paths‚Äù",
    "text": "Practice ‚Äúsafe paths‚Äù\n\nrelative to a stable base, not absolute paths.\n\nuse file system functions, not paste(), strsplit(), etc.\n\nWorking directory is associated with a specific process or running application.\nWhen you open a project in RStudio or Positron, it sets the working directory to the project root - this is that ‚Äústable base‚Äù\n‚ÄúWorking directory‚Äù as a concept is not comparable to ‚Äúhome directory‚Äù. ‚ÄúHome directory‚Äù is a static, persistent thing."
  },
  {
    "objectID": "workflows.html#practice-safe-paths-2",
    "href": "workflows.html#practice-safe-paths-2",
    "title": "Creating Efficient Workflows in R",
    "section": "Practice ‚Äúsafe paths‚Äù",
    "text": "Practice ‚Äúsafe paths‚Äù\nInstead of:\n\nsetwd(\"C:/Users/andy/path/that/only/I/have\")\nmy_data &lt;- read.csv(\"data/my_data.csv\")\n\nOr:\n\nmy_data &lt;- read.csv(\"C:/Users/andy/path/that/only/I/have/data/my_data.csv\")"
  },
  {
    "objectID": "workflows.html#practice-safe-paths-3",
    "href": "workflows.html#practice-safe-paths-3",
    "title": "Creating Efficient Workflows in R",
    "section": "Practice ‚Äúsafe paths‚Äù",
    "text": "Practice ‚Äúsafe paths‚Äù\nSet your work up as an RStudio or Positron Project/Workspace and use relative paths:\n\nmy_data &lt;- read.csv(\"data/my_data.csv\")\n\nOr:\n\nmy_data &lt;- read.csv(file.path(\"data\", \"my_data.csv\"))"
  },
  {
    "objectID": "workflows.html#work-on-multiple-projects-at-once",
    "href": "workflows.html#work-on-multiple-projects-at-once",
    "title": "Creating Efficient Workflows in R",
    "section": "Work on multiple projects at once",
    "text": "Work on multiple projects at once\nBecause each project uses an isolated R process"
  },
  {
    "objectID": "workflows.html#which-persist-after-rmlist-ls",
    "href": "workflows.html#which-persist-after-rmlist-ls",
    "title": "Creating Efficient Workflows in R",
    "section": "Which persist after rm(list = ls())?",
    "text": "Which persist after rm(list = ls())?\n\n\n\nOption\nPersists?\n\n\n\n\nA. library(dplyr)\n\n\n\nB. summary &lt;- head\n\n\n\nC. options(stringsAsFactors = FALSE)\n\n\n\nD. Sys.setenv(LANGUAGE = \"fr\")\n\n\n\nE. x &lt;- 1:5\n\n\n\nF. attach(iris)\n\n\n\n\n\n\n\n‚àí+\n02:00"
  },
  {
    "objectID": "workflows.html#which-persist-after-rmlist-ls-1",
    "href": "workflows.html#which-persist-after-rmlist-ls-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Which persist after rm(list = ls())?",
    "text": "Which persist after rm(list = ls())?\n\n\n\n\n\n\n\nOption\nPersists?\n\n\n\n\nA. library(dplyr)\n\n\n\nB. summary &lt;- head\n\n\n\nC. options(stringsAsFactors = FALSE)\n\n\n\nD. Sys.setenv(LANGUAGE = \"fr\")\n\n\n\nE. x &lt;- 1:5\n\n\n\nF. attach(iris)"
  },
  {
    "objectID": "workflows.html#start-r-with-a-blank-slate",
    "href": "workflows.html#start-r-with-a-blank-slate",
    "title": "Creating Efficient Workflows in R",
    "section": "Start R with a blank slate",
    "text": "Start R with a blank slate\n\n\n\nSave code for reproducibility.\nWhen you quit: do not save the workspace to an .Rdata file.\nWhen you start: do not reload the workspace from an .Rdata file.\nIn RStudio, set this via Tools &gt; Global Options.\nOr use usethis::use_blank_slate()\n\n\n\n\n\n\nThis is the default (and not customizable) in Positron"
  },
  {
    "objectID": "workflows.html#restart-r-often",
    "href": "workflows.html#restart-r-often",
    "title": "Creating Efficient Workflows in R",
    "section": "Restart R often",
    "text": "Restart R often\n\n\n\nSession -&gt; Restart R\n\n\n\n\nWindows\n\nCtrl + Shift + F10\n\nMac\n\nCmd + Shift + 0"
  },
  {
    "objectID": "workflows.html#project-initiation-rstudio-project",
    "href": "workflows.html#project-initiation-rstudio-project",
    "title": "Creating Efficient Workflows in R",
    "section": "Project initiation: RStudio Project",
    "text": "Project initiation: RStudio Project\n\nNew folder + make it an RStudio Project\n\n\nusethis::create_project(\"~/i_am_new\")\nFile -&gt; New Project -&gt; New Directory -&gt; New Project\n\n\nMake existing folder into an RStudio Project\n\n\nusethis::create_project(\"~/i_exist\")\nFile -&gt; New Project -&gt; Existing Directory"
  },
  {
    "objectID": "workflows.html#project-initiation-positron-workspace",
    "href": "workflows.html#project-initiation-positron-workspace",
    "title": "Creating Efficient Workflows in R",
    "section": "Project initiation: Positron Workspace",
    "text": "Project initiation: Positron Workspace\n\nNew folder + make it a workspace\n\n\nusethis::create_project(\"~/i_am_new\", rstudio = FALSE)\nFile -&gt; New Folder From Template\n\n\nOpen an existing directory as a workspace\n\n\nusethis::create_project(\"~/i_exist\", rstudio = FALSE)\nFile -&gt; New Project -&gt; Existing Directory\n\nNote: if you don‚Äôt specify rstudio = FALSE, it will create an RStudio .Rproj file. This does no harm.\n\n\nTry either option now with a folder containing (or that will contain) Bivalve Data 2014-2022_ICE.csv."
  },
  {
    "objectID": "workflows.html#naming-things",
    "href": "workflows.html#naming-things",
    "title": "Creating Efficient Workflows in R",
    "section": "Naming things",
    "text": "Naming things\n\n\n machine readable\n\nhuman readable\n\nsort nicely\n\n\n\n\nJenny Bryan ‚ÄúNaming things‚Äù video\nNormConf ¬∑ Dec 4, 2022:\nhttps://www.youtube.com/watch?v=ES1LTlnpLMk"
  },
  {
    "objectID": "workflows.html#naming-things-1",
    "href": "workflows.html#naming-things-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Naming things",
    "text": "Naming things\n\nWhat features differentiate üòî vs üòç?\n\n\n\n\n\nüòî\n\n\n\n\nüòç\n\n\n\n\nmyabstract.docx\nJoe‚Äôs Filenames Use Spaces and Punctuation.xlsx\nfigure 1.png\nhomework.R\nJW7d^(2sl@deletethisandyourcareerisoverWx2*.txt\n\n2018-01_teucher-abstract-conference.docx\njoes-filenames-are-getting-better.xlsx\nfig01_scatterplot-talk-length-vs-interest.png\n2024-07-25_ecol-455_assignment-5.R\n1986-01-28_raw-data-from-challenger-o-rings.txt\n\n\n\n\n‚àí+\n01:00"
  },
  {
    "objectID": "workflows.html#names-machines-like",
    "href": "workflows.html#names-machines-like",
    "title": "Creating Efficient Workflows in R",
    "section": "Names machines like",
    "text": "Names machines like\n\ndon‚Äôt leave white space\n\n\n\nuse letters, numbers, hyphens and underscores‚Ä¶ that‚Äôs it  (characters like ^.*?+|$ can have a special meaning)\n\n\n\n\nbe consistent with case  (some operating systems treat a and A the same, some differently).\n\n\n\n\nuse separator characters wisely\n\n¬† ¬† use underscore _ to separate different chunks\n¬† ¬† use hyphen - for words in the same chunk\n\n\n\nThis creates names that are regular expression and globbing friendly, and easy to compute on! üéâ\n\nAdapted from  https://djnavarro.net/slides-project-structure/#1.\n\n\nGlobbing: use of pattern matching against the names in a filesystem directory such that a name pattern is expanded into a list of names matching that pattern."
  },
  {
    "objectID": "workflows.html#names-humans-like",
    "href": "workflows.html#names-humans-like",
    "title": "Creating Efficient Workflows in R",
    "section": "Names humans like",
    "text": "Names humans like\n\nname contains info on content\nname anticipates context\nconcept of a slug üêå from user-friendly URLs\n\n1986-01-28_raw-data-from-challenger-o-rings.txt\nconcise, meaningful description\nusually appended to the end\n\n\nNote: A URL slug is the part of the URL after the last backslash"
  },
  {
    "objectID": "workflows.html#names-that-sort-nicely",
    "href": "workflows.html#names-that-sort-nicely",
    "title": "Creating Efficient Workflows in R",
    "section": "Names that sort nicely",
    "text": "Names that sort nicely\n\nput something numeric in there\nleft pad with zeros for constant width, nice sorting, 01\nuse the ISO 8601 standard for dates, YYYY-MM-DD\norder = chronological or ‚Ä¶ consider common sense"
  },
  {
    "objectID": "workflows.html#iso-8601",
    "href": "workflows.html#iso-8601",
    "title": "Creating Efficient Workflows in R",
    "section": "ISO 8601",
    "text": "ISO 8601\n\n\n\n\n\n\n\nYYYY-MM-DD\nISO 8601\n\nhttps://www.iso.org/iso-8601-date-and-time-format.html\n\n\nhttps://twitter.com/JennyBryan/status/816143967695687684"
  },
  {
    "objectID": "workflows.html#file-names",
    "href": "workflows.html#file-names",
    "title": "Creating Efficient Workflows in R",
    "section": "üëç file names",
    "text": "üëç file names\n\nlibrary(fs)\nlibrary(dplyr)\n\nft &lt;- tibble(files = dir_ls(\"_examples/data/\", glob = \"*.csv\"))\n\n\nIntuitive sorting.\n\n\n\nft\n\n# A tibble: 4 √ó 1\n  files                                           \n  &lt;fs::path&gt;                                      \n1 _examples/data/2024-07-16_site-2_plot-data.csv  \n2 _examples/data/2024-07-25_site-2_survey-data.csv\n3 _examples/data/2024-08-12_site-1_plot-data.csv  \n4 _examples/data/2024-08-18_site-1_survey-data.csv\n\n\n\n\narrange(ft, desc(files))\n\n# A tibble: 4 √ó 1\n  files                                           \n  &lt;fs::path&gt;                                      \n1 _examples/data/2024-08-18_site-1_survey-data.csv\n2 _examples/data/2024-08-12_site-1_plot-data.csv  \n3 _examples/data/2024-07-25_site-2_survey-data.csv\n4 _examples/data/2024-07-16_site-2_plot-data.csv"
  },
  {
    "objectID": "workflows.html#file-names-1",
    "href": "workflows.html#file-names-1",
    "title": "Creating Efficient Workflows in R",
    "section": "üëç file names",
    "text": "üëç file names\n\nlibrary(stringr)\n\nfilter(ft, str_detect(files, pattern = \"plot-data\"))\n\n# A tibble: 2 √ó 1\n  files                                         \n  &lt;fs::path&gt;                                    \n1 _examples/data/2024-07-16_site-2_plot-data.csv\n2 _examples/data/2024-08-12_site-1_plot-data.csv\n\n\nEasy to filter in R (or the shell or whatever)"
  },
  {
    "objectID": "workflows.html#file-names-2",
    "href": "workflows.html#file-names-2",
    "title": "Creating Efficient Workflows in R",
    "section": "üëç file names",
    "text": "üëç file names\n\nlibrary(tidyr)\n\nft |&gt; \n  mutate(files = path_ext_remove(files)) |&gt; \n  separate(files, into = c(\"date\", \"site\", \"data_type\"), sep = \"_\")\n\n# A tibble: 4 √ó 3\n  date  site                     data_type\n  &lt;chr&gt; &lt;chr&gt;                    &lt;chr&gt;    \n1 \"\"    examples/data/2024-07-16 site-2   \n2 \"\"    examples/data/2024-07-25 site-2   \n3 \"\"    examples/data/2024-08-12 site-1   \n4 \"\"    examples/data/2024-08-18 site-1   \n\n\nIntentional delimiters means meta-data is easily recovered.\n_ delimits fields; - delimits words\n\nRename the file Bivalve Data 2014-2022_ICE.csv to something that is machine readable, human readable, and sorts nicely.\nRead the file in to R using a relateive path"
  },
  {
    "objectID": "workflows.html#names-matter",
    "href": "workflows.html#names-matter",
    "title": "Creating Efficient Workflows in R",
    "section": "Names matter",
    "text": "Names matter\n\nmachine readable, human readable, and sort nicely\n\n\neasy to implement NOW\n\npayoffs accumulate as your skills evolve and  projects get more complex"
  },
  {
    "objectID": "workflows.html#project-structure",
    "href": "workflows.html#project-structure",
    "title": "Creating Efficient Workflows in R",
    "section": "Project structure",
    "text": "Project structure\n\n\nmy-project/\n‚îú‚îÄ‚îÄ 01_read-data.R\n‚îú‚îÄ‚îÄ 02_clean-data.R\n‚îú‚îÄ‚îÄ 03_analysis.R\n‚îú‚îÄ‚îÄ 04_output.R\n‚îú‚îÄ‚îÄ R\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ data\n‚îÇ   ‚îú‚îÄ‚îÄ derived_data\n‚îÇ   ‚îî‚îÄ‚îÄ raw_data\n‚îú‚îÄ‚îÄ outputs\n‚îî‚îÄ‚îÄ paper\n    ‚îú‚îÄ‚îÄ paper.qmd\n    ‚îî‚îÄ‚îÄ references.bib"
  },
  {
    "objectID": "workflows.html#your-r-installation",
    "href": "workflows.html#your-r-installation",
    "title": "Creating Efficient Workflows in R",
    "section": "Your R installation",
    "text": "Your R installation"
  },
  {
    "objectID": "workflows.html#r-packages",
    "href": "workflows.html#r-packages",
    "title": "Creating Efficient Workflows in R",
    "section": "R packages",
    "text": "R packages\n\nR packages\n\nthe natural unit for distributing R code\n\n\n\nbase R\n\n14 base + 15 recommended packages\nships with all binary distributions of R"
  },
  {
    "objectID": "workflows.html#additional-packages",
    "href": "workflows.html#additional-packages",
    "title": "Creating Efficient Workflows in R",
    "section": "Additional packages",
    "text": "Additional packages\n\n\nCRAN, ~20k packages\n\n# install from CRAN\ninstall.packages(\"devtools\")\n# attach\nlibrary(devtools)\n\n\n\n\nGitHub ~‚àû packages\n\n# install from GitHub\nremotes::install_github(\"r-lib/devtools\")\n# attach\nlibrary(devtools)\n\ndevelopment versions, or packages not on CRAN"
  },
  {
    "objectID": "workflows.html#r-libraries---where-do-packages-live",
    "href": "workflows.html#r-libraries---where-do-packages-live",
    "title": "Creating Efficient Workflows in R",
    "section": "R Libraries - where do packages live?",
    "text": "R Libraries - where do packages live?\n\nA library is a directory containing installed packages\nYou have at least one library on your computer\nCommon (and recommended) to have two libraries:\n\nA system library with base (14) and recommended (15) packages; installed with R.\nA user library with user-installed packages\n\nWe use library(pkg) function to attach a package\n7 base packages are always attached (base, methods, utils, stats, grDevices, datasets, graphics)"
  },
  {
    "objectID": "workflows.html#where-do-packages-live-locally",
    "href": "workflows.html#where-do-packages-live-locally",
    "title": "Creating Efficient Workflows in R",
    "section": "Where do packages live locally?",
    "text": "Where do packages live locally?\n\nThe system library (base/recommended packages).\n.Library\n\nAll libraries for the current session\n.libPaths()\n\nAll installed packages\ninstalled.packages()"
  },
  {
    "objectID": "workflows.html#your-turn",
    "href": "workflows.html#your-turn",
    "title": "Creating Efficient Workflows in R",
    "section": "Your turn",
    "text": "Your turn\n\nWhat libraries are in use in your current R session?\nUsing installed.packages(), what are the base and recommended packages?"
  },
  {
    "objectID": "workflows.html#installing-and-updating-packages",
    "href": "workflows.html#installing-and-updating-packages",
    "title": "Creating Efficient Workflows in R",
    "section": "Installing and updating packages",
    "text": "Installing and updating packages"
  },
  {
    "objectID": "workflows.html#r-startup",
    "href": "workflows.html#r-startup",
    "title": "Creating Efficient Workflows in R",
    "section": "R Startup",
    "text": "R Startup\n\n\ncomplexity in R startup, for both personal and system-level customization. We can ignore most of it"
  },
  {
    "objectID": "workflows.html#r-startup-1",
    "href": "workflows.html#r-startup-1",
    "title": "Creating Efficient Workflows in R",
    "section": "R Startup",
    "text": "R Startup\n\n.Rprofile - contains R code to be run at the start of each session.\n.Renviron - contains environment variables to be set in R sessions."
  },
  {
    "objectID": "workflows.html#what-to-put-in-.rprofile",
    "href": "workflows.html#what-to-put-in-.rprofile",
    "title": "Creating Efficient Workflows in R",
    "section": "what to put in .Rprofile",
    "text": "what to put in .Rprofile\n\nset a default CRAN mirror\ncustom startup message"
  },
  {
    "objectID": "workflows.html#what-not-to-put-in-.rprofile",
    "href": "workflows.html#what-not-to-put-in-.rprofile",
    "title": "Creating Efficient Workflows in R",
    "section": "what not to put in .Rprofile",
    "text": "what not to put in .Rprofile\nIf it matters for code you share, it should not be in .Rprofile\nwhy shouldn‚Äôt these go in .Rprofile?\n\nlibrary(tidyverse)\nf &lt;- dplyr::filter\ntheme_set(theme_bw())"
  },
  {
    "objectID": "workflows.html#why-might-these-be-safe-to-put-in-.rprofile",
    "href": "workflows.html#why-might-these-be-safe-to-put-in-.rprofile",
    "title": "Creating Efficient Workflows in R",
    "section": "Why might these be safe to put in .Rprofile?",
    "text": "Why might these be safe to put in .Rprofile?\n\nlibrary(usethis)\nlibrary(devtools)"
  },
  {
    "objectID": "workflows.html#rprofile",
    "href": "workflows.html#rprofile",
    "title": "Creating Efficient Workflows in R",
    "section": ".Rprofile",
    "text": ".Rprofile\n\nusethis::edit_r_profile()"
  },
  {
    "objectID": "workflows.html#renviron",
    "href": "workflows.html#renviron",
    "title": "Creating Efficient Workflows in R",
    "section": ".Renviron",
    "text": ".Renviron\n\nSet environment variables for R sessions\nOften sensitive information that you don‚Äôt want to share\n\nExamples\n\nAPI Keys (Eg GitHub, ChatGPT etc)\nDatabase username and password\nSome R options"
  },
  {
    "objectID": "workflows.html#renviron-1",
    "href": "workflows.html#renviron-1",
    "title": "Creating Efficient Workflows in R",
    "section": ".Renviron",
    "text": ".Renviron\n\nusethis::edit_r_environ()\n\nVAR_NAME=value\nGOOGLE_API_KEY=your_api_key_here"
  },
  {
    "objectID": "workflows.html#renviron-2",
    "href": "workflows.html#renviron-2",
    "title": "Creating Efficient Workflows in R",
    "section": ".Renviron",
    "text": ".Renviron\nAccess environment variables in R with Sys.getenv(\"VAR_NAME\")\n\nSys.getenv(\"GOOGLE_API_KEY\")\n#&gt; [1] \"your_api_key_here\""
  },
  {
    "objectID": "workflows.html#your-turn-1",
    "href": "workflows.html#your-turn-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Your turn",
    "text": "Your turn\n\nCreate an environment variable in .Renviron called MY_NAME with your name as the value.\nCreate a custom startup message in .Rprofile that gives you a personalized message when you start R."
  },
  {
    "objectID": "workflows.html#customizing-your-ide",
    "href": "workflows.html#customizing-your-ide",
    "title": "Creating Efficient Workflows in R",
    "section": "Customizing your IDE",
    "text": "Customizing your IDE\n\n\nPane layout\nThemes\nFonts\nPositron extensions"
  },
  {
    "objectID": "workflows.html#keyboard-shortcuts-1",
    "href": "workflows.html#keyboard-shortcuts-1",
    "title": "Creating Efficient Workflows in R",
    "section": "Keyboard shortcuts",
    "text": "Keyboard shortcuts\nIf in doubt, use the command palette: Ctrl + Shift + P"
  },
  {
    "objectID": "workflows.html#navigation-files",
    "href": "workflows.html#navigation-files",
    "title": "Creating Efficient Workflows in R",
    "section": "Navigation & Files",
    "text": "Navigation & Files\n\nCtrl + Shift + N - New file\nCtrl + S - Save current file\nCtrl + F - Find in current file\nCtrl + Shift + F - Find in files (global search)\nCtrl + . - Go to file/function\nCtrl + 1 - Focus source editor\nCtrl + 2 - Focus console"
  },
  {
    "objectID": "workflows.html#code-editing",
    "href": "workflows.html#code-editing",
    "title": "Creating Efficient Workflows in R",
    "section": "Code Editing",
    "text": "Code Editing\n\nCtrl + Shift + C - Comment/uncomment lines\nTab - Indent selection\nShift + Tab - Unindent selection\nAlt + Up/Down - Move line(s) up/down\nAlt + Shift + Up/Down - Duplicate line(s) ???\nCtrl + X - Cut entire line (when no selection)"
  },
  {
    "objectID": "workflows.html#magic-of-multiple-cursors",
    "href": "workflows.html#magic-of-multiple-cursors",
    "title": "Creating Efficient Workflows in R",
    "section": "Magic of Multiple Cursors",
    "text": "Magic of Multiple Cursors\n\nCtrl + Alt + Up/Down - Add cursor above/below\nCtrl + D - Add next occurrence of selected text (custom)"
  },
  {
    "objectID": "workflows.html#navigation-within-code",
    "href": "workflows.html#navigation-within-code",
    "title": "Creating Efficient Workflows in R",
    "section": "Navigation Within Code",
    "text": "Navigation Within Code\n\nCtrl + Left/Right - Jump word by word\nHome/End - Jump to beginning/end of line\nCtrl + Home/End - Jump to beginning/end of document\nCtrl + P - Jump to matching brace"
  },
  {
    "objectID": "workflows.html#r-specific",
    "href": "workflows.html#r-specific",
    "title": "Creating Efficient Workflows in R",
    "section": "R-Specific",
    "text": "R-Specific\n\nTab - Auto-complete\nF1 - Show help for function under cursor\nCtrl + Shift + F10 - Restart R session\nCtrl + Shift + M - Insert pipe operator (%&gt;% or |&gt;)\nAlt + - - Insert assignment operator (&lt;-)"
  },
  {
    "objectID": "workflows.html#last.value",
    "href": "workflows.html#last.value",
    "title": "Creating Efficient Workflows in R",
    "section": ".Last.value",
    "text": ".Last.value\nShows last evaluated value in console\nRStudio\n\nTools &gt; Global Options &gt; General &gt; Advanced &gt; Show .Last.value in environment listing\n\nPositron\nControlled by an option:\n\nusethis::edit_r_profile()\noptions(positron.show_last_value = TRUE)"
  },
  {
    "objectID": "workflows.html#automatic-code-formatting",
    "href": "workflows.html#automatic-code-formatting",
    "title": "Creating Efficient Workflows in R",
    "section": "Automatic code formatting",
    "text": "Automatic code formatting\nAir: https://posit-dev.github.io/air/\n\nIn charge of the layout of your R code.\nFormatters do not change the meaning of code\nEnsure that whitespace, newlines, and other punctuation conform to a set of rules and standards\n\n\nusethis::use_air()"
  },
  {
    "objectID": "workflows.html#reprexes",
    "href": "workflows.html#reprexes",
    "title": "Creating Efficient Workflows in R",
    "section": "Reprexes",
    "text": "Reprexes"
  },
  {
    "objectID": "workflows.html#start-using-project-oriented-workflows-in-your-work",
    "href": "workflows.html#start-using-project-oriented-workflows-in-your-work",
    "title": "Creating Efficient Workflows in R",
    "section": "Start using project-oriented workflows in your work",
    "text": "Start using project-oriented workflows in your work\n\n\nUse RStudio or Positron Projects/Workspaces\ndon‚Äôt use setwd()\nuse relative paths\nUse a blank slate - restart R often"
  },
  {
    "objectID": "workflows.html#try-to-name-files-well",
    "href": "workflows.html#try-to-name-files-well",
    "title": "Creating Efficient Workflows in R",
    "section": "Try to name files well",
    "text": "Try to name files well\n\n\nmachine readable\nhuman readable\nsorts nicely (including ISO 8601 dates)"
  },
  {
    "objectID": "workflows.html#use-positron-or-rstudio-more-efficiently",
    "href": "workflows.html#use-positron-or-rstudio-more-efficiently",
    "title": "Creating Efficient Workflows in R",
    "section": "Use Positron or RStudio more efficiently",
    "text": "Use Positron or RStudio more efficiently\n\n\nuse keyboard shortcuts\nuse the command palette\nuse Air"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Parks Canada - Intermediate R",
    "section": "",
    "text": "This website contains the materials for the Parks Canada Intermediate R workshop. The workshop is designed to help participants improve their R programming skills, focusing on efficient workflows, , and reproducible research practices."
  },
  {
    "objectID": "index.html#workshop-overview",
    "href": "index.html#workshop-overview",
    "title": "Parks Canada - Intermediate R",
    "section": "Workshop Overview:",
    "text": "Workshop Overview:\nThis intermediate R workshop is designed for data professionals and scientists who have basic R experience and want to advance their skills in data analysis and programming.\nThis will be an online, interactive workshop delivered virtually."
  },
  {
    "objectID": "index.html#modules",
    "href": "index.html#modules",
    "title": "Parks Canada - Intermediate R",
    "section": "Modules",
    "text": "Modules\n\n1. Project-oriented workflows and effective use of your IDE (RStudio/Positron)\nLearn holistic workflows that address the most common sources of friction in data analysis. We‚Äôll work on project-oriented workflows, effective use of your Integrated Development Environment (IDE), maintaining your R installation, and how to plan for collaboration, communication, and iteration\nKey Topics:\n\nProject-oriented workflows\nRStudio/Positron project management features\nEffective use of RStudio/Positron including keyboard shortcuts\nPersonal R Administration"
  },
  {
    "objectID": "index.html#prework",
    "href": "index.html#prework",
    "title": "Parks Canada - Intermediate R",
    "section": "Prework",
    "text": "Prework\nPlease ensure you have completed the steps in System Setup."
  },
  {
    "objectID": "index.html#instructor",
    "href": "index.html#instructor",
    "title": "Parks Canada - Intermediate R",
    "section": "Instructor:",
    "text": "Instructor:\nAndy Teucher is a freelance data scientist and package developer with a passion for teaching others how to use data science tools to make their work more efficient and reproducible. His background is in conservation biology, with an MSc in Ecology from the University of Calgary. He has spent much of his career as a data scientist in government, where he made it his mission to promote and teach open, reproducible data science practices. He has written many R packages for internal use in his teams as well as for a broader audience, with several hosted on CRAN. Andy is a certified Software Carpentry and Data Carpentry instructor, and has led many workshops teaching programming skills to scientists and data professionals."
  },
  {
    "objectID": "git-github.html#what-is-git",
    "href": "git-github.html#what-is-git",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "What is Git? ",
    "text": "What is Git? \n\nA version control system\nIt tracks and manages the evolution of a set of files ‚Äî called a repository*\nIt keeps a history of changes to files, who made the changes, and when\nIt allows you to revert to previous versions of files\nIt enables collaboration by merging changes from multiple contributors\nIt is a command-line tool, but there are graphical user interfaces (GUIs) available\n\n\n*repository (repo) == folder == RStudio or Positron project\n\nUsing a project-oriented workflow is critical"
  },
  {
    "objectID": "git-github.html#why-git",
    "href": "git-github.html#why-git",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Why Git?",
    "text": "Why Git?"
  },
  {
    "objectID": "git-github.html#why-git-1",
    "href": "git-github.html#why-git-1",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Why Git?",
    "text": "Why Git?\n\n‚ÄúCommits‚Äù help us focus on the work, not the bookkeeping.\nIt takes care of otherwise time- consuming versioning & unrelenting file tracking."
  },
  {
    "objectID": "git-github.html#why-github",
    "href": "git-github.html#why-github",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Why GitHub? ",
    "text": "Why GitHub? \n\n\nA commit is a snapshot of your project at a point in time."
  },
  {
    "objectID": "git-github.html#what-is-github-traditional-answer",
    "href": "git-github.html#what-is-github-traditional-answer",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "What is GitHub (traditional answer)?",
    "text": "What is GitHub (traditional answer)?\n\nGitHub is an online collaborative platform. It is built on top of Git - software that does file versioning and bookkeeping.\nIt is a remote host for your Git repositories.\nIt provides a web interface for managing, sharing, and collaborating on your repositories.\nYou can think of GitHub working like Dropbox - but with more control."
  },
  {
    "objectID": "git-github.html#what-is-github-non-traditional-answer",
    "href": "git-github.html#what-is-github-non-traditional-answer",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "What is GitHub (non-traditional answer)?",
    "text": "What is GitHub (non-traditional answer)?\n\nPublishing platform. A new way for sharing documentation & scicomm - your files can become websites! Share the url once, it‚Äôs always the latest version.\nProject management system. Short- and long-term collaborative ‚Äútodo‚Äù lists: ‚ÄúIssues‚Äù & ‚ÄúProjects‚Äù\n\n\nfor most folks, the pros of Git only outweigh the cons once you take the additional step of hooking your local repository up to a remote host like GitHub. The joint use of Git and GitHub offers many benefits that more than justify the learning curve."
  },
  {
    "objectID": "git-github.html#an-aside-set-up-your-terminal-in-positron",
    "href": "git-github.html#an-aside-set-up-your-terminal-in-positron",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "An aside: set up your terminal in Positron",
    "text": "An aside: set up your terminal in Positron\n\nUnless you are already a Windows Powershell or Command Prompt user, I recommend switching the terminal in Positron to Git Bash.\n\n\n\n\n\n\nCtrl-Shift-PCtrl-Shift-P to open the command palette\nsearch for \"terminal default profile\"\nselect Terminal: Select Default Profile‚Äù and set it to ‚ÄúGit Bash‚Äù.\n\nsettings.json\n{\n  \"git.path\": \"C:/Program Files/Git/bin/bash.exe\",\n  \"terminal.integrated.defaultProfile.windows\": \"Git Bash\",\n  \"workbench.keybindings.rstudioKeybindings\": true,\n}"
  },
  {
    "objectID": "git-github.html#introduce-yourself-to-git",
    "href": "git-github.html#introduce-yourself-to-git",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Introduce yourself to Git",
    "text": "Introduce yourself to Git\nConfigure your user.name and user.email for git. This information will be associated with your commits.\n\n\nIn the terminal\nwhich git\ngit config --global user.name \"Jane Doe\"\ngit config --global user.email \"jane@doe.ca\"\n\n\n\nIn Positron or RStudio\nusethis::use_git_config(\n  user.name = \"Jane Doe\",\n  user.email = \"jane@example.com\"\n)"
  },
  {
    "objectID": "git-github.html#check-link-between-r-and-github",
    "href": "git-github.html#check-link-between-r-and-github",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Check link between R and GitHub",
    "text": "Check link between R and GitHub\nCommunicating with GitHub requires authentication with your GitHub account. This is achieved by creating and securely storing a Personal Access Token (PAT). The Managing Git(Hub) Credentials vignette in the usethis package has details on using PATs."
  },
  {
    "objectID": "git-github.html#check-link-between-r-and-github-1",
    "href": "git-github.html#check-link-between-r-and-github-1",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Check link between R and GitHub",
    "text": "Check link between R and GitHub\nCreate a PAT with:\nusethis::create_github_token()\n\n\nGive the token a descriptive name, accept the default scopes, and click ‚ÄúGenerate Token‚Äù.\nCopy the newly generated PAT to your clipboard.\nRun gitcreds::gitcreds_set() in R and paste in your PAT when prompted.\nAfter you close the PAT webpage, you won‚Äôt be able to see your PAT again! You can store it somewhere secure, such as in a password manager.\n\n\n\nYou may need to install the gitcreds package.\nCaveat about storing PATs on Linux:\nmacOS and Windows both have built-in credential managers that will securely store your PAT, however the same does not exist in Linux. Happy Git with R has a section on options for storing your PAT on Linux."
  },
  {
    "objectID": "git-github.html#check-your-git-setup-with-a-situation-report",
    "href": "git-github.html#check-your-git-setup-with-a-situation-report",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Check your Git setup with a ‚Äúsituation report‚Äù",
    "text": "Check your Git setup with a ‚Äúsituation report‚Äù\nusethis::git_sitrep()\n\n\n‚îÄ‚îÄ Git global (user)\n‚Ä¢ Name: 'Andy Teucher'\n‚Ä¢ Email: 'andy.teucher@gmail.com'\n‚Ä¢ Global (user-level) gitignore file: '/Users/andy/.gitignore'\n‚Ä¢ Vaccinated: TRUE\n‚Ñπ Defaulting to 'https' Git protocol\n‚Ä¢ Default Git protocol: 'https'\n‚Ä¢ Default initial branch name: 'main'\n\n‚îÄ‚îÄ GitHub user\n‚Ä¢ Default GitHub host: 'https://github.com'\n‚Ä¢ Personal access token for 'https://github.com': '&lt;discovered&gt;'\n‚Ä¢ GitHub user: 'ateucher'\n‚Ä¢ Token scopes: 'gist, repo, user, workflow'\n‚Ä¢ Email(s): 'andy.teucher@gmail.com (primary)'\n‚Ñπ No active usethis project\n\nPersonal access token for 'https://github.com': '&lt;discovered&gt;'\n\n\n\nIt is essential to check whether your name and email are correct and the PAT is showing as ‚Äúdiscovered‚Äù\n\n\nDo you see anything different in your output?\n\n\nThe output shows information about the link between RStudio and GitHub. Not all of it is relevant now, but it is essential to check whether your name and email are correct and the PAT is showing as ‚Äúdiscovered‚Äù\ngit_vaccinate()"
  },
  {
    "objectID": "git-github.html#we-can-interact-with-git-and-github",
    "href": "git-github.html#we-can-interact-with-git-and-github",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "We can interact with Git and GitHub:",
    "text": "We can interact with Git and GitHub:\n\nfrom with Positron  GUI,\nusing usethis git-related functions,\n command-line tools + GitHub web interface"
  },
  {
    "objectID": "git-github.html#starting-a-new-project-with-git-and-github",
    "href": "git-github.html#starting-a-new-project-with-git-and-github",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Starting a new project with Git and GitHub",
    "text": "Starting a new project with Git and GitHub\n\nGitHub First\n\nCreate a new repo on GitHub, then clone it to your computer\nPreferred, cleanest workflow \n\nLocal First\n\nCreate a new repo on your computer, then push it to GitHub\nTotally fine, a bit more awkward"
  },
  {
    "objectID": "git-github.html#we-will",
    "href": "git-github.html#we-will",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "We will:",
    "text": "We will:\n\nCreate a new repo on GitHub\nClone it to your computer and open as a new project using Positron\nCreate some commits\nPush the commits to GitHub\n\n\nWe‚Äôre going to make a repository for recipes!\nOrganization:\n\nREADME.md with a description of the project\none .md file per recipe in a recipes/ folder"
  },
  {
    "objectID": "git-github.html#making-a-commit",
    "href": "git-github.html#making-a-commit",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Making a commit",
    "text": "Making a commit\n\nMake changes to file(s)\nChoose what files you want to include in the commit\nStage the changes (using git add)\nCommit the staged changes (using git commit)\n\n\nIf you think of Git as taking snapshots of changes over the life of a project, git add specifies what will go in a snapshot (putting things in the staging area), and git commit then actually takes the snapshot, and makes a permanent record of it (as a commit). It‚Äôs almost always better to explicitly add things to the staging area, because you might commit changes you forgot you made. Try to stage things manually, or you might find yourself searching for ‚Äúgit undo commit‚Äù more than you would like!"
  },
  {
    "objectID": "git-github.html#converting-an-existing-project-to-use-git-and-github",
    "href": "git-github.html#converting-an-existing-project-to-use-git-and-github",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Converting an existing project to use Git and GitHub",
    "text": "Converting an existing project to use Git and GitHub\n\nInitialize a Git repository in your existing project\nCommit the existing files\nCreate a new repo on GitHub\nLink your local repo to the GitHub repo\nPush the commits to GitHub"
  },
  {
    "objectID": "git-github.html#ignoring-things",
    "href": "git-github.html#ignoring-things",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Ignoring things",
    "text": "Ignoring things\n\nWhat about files that you don‚Äôt want to track with Git or put on GitHub?\n\nlarge/sensitive data files,\nrendered outputs,\ntemporary files created by IDE\n\n.gitignore file in the root of your project\n\n\n\n# R data files\n*.RData\n*.rda\n\n# Specific data files\ndata/large_data.csv\n\n# output files\nreports/\n\n\nEach line specifies a pattern\nComments starting with # are ignored\nWildcards (e.g., *) to specify patterns\nSpecify specific files or entire directories"
  },
  {
    "objectID": "git-github.html#createadd-to-a-.gitignore-file",
    "href": "git-github.html#createadd-to-a-.gitignore-file",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Create/add to a .gitignore file",
    "text": "Create/add to a .gitignore file\n\n\n\n\nOr\nusethis::use_git_ignore(\n  c(\"*.RData\", \"data/large_data.csv\", \"reports/\")\n)"
  },
  {
    "objectID": "git-github.html#your-turn",
    "href": "git-github.html#your-turn",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Your Turn",
    "text": "Your Turn\n\nFind an existing project on your computer, and turn it into a git repository\nChoose carefully* what files to include in your first commit, and commit the files\nCreate a new repository on GitHub and push your local commits to GitHub\n\n\nRemember to use the .gitignore file\n\n\n\nhttps://positron.posit.co/git.html"
  },
  {
    "objectID": "git-github.html#collaborating",
    "href": "git-github.html#collaborating",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Collaborating",
    "text": "Collaborating\n\nGit is a distributed version control system\nEach collaborator has a full copy of the repository, including its history\nAll collaborators can push changes to the remote repository (given they have permission)\nChanges made by collaborators can be pulled into your local repository"
  },
  {
    "objectID": "git-github.html#your-turn-1",
    "href": "git-github.html#your-turn-1",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Your turn",
    "text": "Your turn\n\nIn pairs, one person is the ‚Äúowner‚Äù of a repo, the other is a ‚Äúcollaborator‚Äù\nOwner adds collaborator to a on GitHub\nCollaborator clones the repo to their computer\nCollaborator makes a change, commits, and pushes to GitHub\nOwner pulls the change to their computer"
  },
  {
    "objectID": "git-github.html#collaborating-via-branching-pull-requests",
    "href": "git-github.html#collaborating-via-branching-pull-requests",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Collaborating via branching + ‚ÄúPull Requests‚Äù",
    "text": "Collaborating via branching + ‚ÄúPull Requests‚Äù\n\nMore formal collaboration workflow\nAllows fearless experimentation\nAllows efficient code review and discussion\nGood for bigger contributions\n\n\n\n\n\n\n%%{\n    init: {\n        'theme':'base', \n        'showCommitLabel': false, \n        'themeVariables': { \n            'git0':'#6cc644', \n            'git1':'#f39c12', \n            'commitLabelColor': '#325c65', \n            'commitLabelBackground':'#325c65'\n        }\n    }\n}%%\n\ngitGraph\n    commit id: \" \"\n    commit id: \"  \"\n    commit id: \"   \"\n    commit id: \"    \"\n    branch feature\n    commit id: \"     \"\n    commit id: \"      \"\n    commit id: \"       \"\n    commit id: \"        \"\n    checkout main\n    merge feature tag: \"PR review & merge\"\n    commit id: \"         \"\n    commit id: \"          \""
  },
  {
    "objectID": "git-github.html#steps",
    "href": "git-github.html#steps",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Steps",
    "text": "Steps\n\nCreate a new branch\nMake changes, commit, and push the branch to GitHub\nOpen a Pull Request (PR) on GitHub\nDiscuss and review the PR\nMerge the PR into the main branch\nPull the latest changes to your local main branch"
  },
  {
    "objectID": "git-github.html#licensing-and-best-practices",
    "href": "git-github.html#licensing-and-best-practices",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Licensing and best practices",
    "text": "Licensing and best practices\n\nShare evidence, research and decision making openly. Make all non-sensitive data, information, and new code developed in delivery of services open to the outside world for sharing and reuse under an open licence.\n\n\nIt is recommended that the source code be released as early as possible in the project‚Äôs life cycle to avoid the overhead of publishing source code late in the process.\n\n\nEmployees should use their full name and Government of Canada email address for all code contributions to public repositories while acting within the scope of their duties or employment.\n\n\n*https://canada-ca.github.io/open-source-logiciel-libre/en/open-source-standards.html\nhttps://github.com/canada-ca/template-gabarit\n\n\n\nSpend some time exploring this repo.\nCan make a PR or open an issue if they want to contribute.\nGitHub as a publishing platform."
  },
  {
    "objectID": "git-github.html#choose-a-license",
    "href": "git-github.html#choose-a-license",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Choose a license",
    "text": "Choose a license\nFor work\n\nBy default, a project without an open source licence applied to it would only be released under the Crown Copyright.\n\n\nMIT is a good, permissive license for most projects\nApache 2.0 is similar, but adds an explicit patent grant\n\nusethis::use_mit_license(\n  copyright_holder = \"His Majesty the King in Right of Canada, as represented by the Minister responsible for Parks Canada Agency\"\n)\nFor personal projects\nusethis::use_mit_license(\n  copyright_holder = \"Andy Teucher\"\n)\n\nhttps://github.com/canada-ca/open-source-logiciel-libre/blob/master/en/guides/publishing-open-source-code.md#select-open-source-software-licence\n\n\n\nShow text of license\nExplain I own the copyright, but anyone is free to borrow/use/modify it."
  },
  {
    "objectID": "git-github.html#your-turn-2",
    "href": "git-github.html#your-turn-2",
    "title": "Version Control with Git and Collaboration with GitHub",
    "section": "Your turn",
    "text": "Your turn\nAdd a license to your repo via a pull request"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "System Setup ü§ñ",
    "section": "",
    "text": "You will require the following software installed and configured for the workshop. Please have this set up and ready to go before we start."
  },
  {
    "objectID": "setup.html#computing-requirements",
    "href": "setup.html#computing-requirements",
    "title": "System Setup ü§ñ",
    "section": "Computing requirements",
    "text": "Computing requirements\nYou will need:\n\nA laptop computer with administrative privileges\nR and RStudio\nR package development toolchain\nSeveral R packages\nGit\nGitHub account"
  },
  {
    "objectID": "setup.html#install-r-and-rstudio",
    "href": "setup.html#install-r-and-rstudio",
    "title": "System Setup ü§ñ",
    "section": "Install R and RStudio",
    "text": "Install R and RStudio\nYou will need:\n\nR version &gt;= 4.4.0\nRStudio &gt;= 2024.04 or Positron &gt;= 2025.09.0-139\n\n\nInstall R\nDownload and install R for your operating system from https://cloud.r-project.org/.\n\n\nInstall R Studio\nDownload and install RStudio Desktop from https://posit.co/download/rstudio-desktop/. This page should automatically offer you the version suitable for your operating system, but you can scroll down to find versions for all operating systems.\n\n\nInstall Positron\nDownload and install Positron from https://positron.posit.co/download.html. This page should automatically offer you the version suitable for your operating system, but you can scroll down to find versions for all operating systems."
  },
  {
    "objectID": "setup.html#install-r-package-development-tools",
    "href": "setup.html#install-r-package-development-tools",
    "title": "System Setup ü§ñ",
    "section": "Install R package development tools",
    "text": "Install R package development tools\n\nFor Windows\nDownload and run the latest Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/.\n\nKeep the default settings for the installation location and components to install\ncheck the box to add rtools to the system PATH.\n\n\n\nFor Mac\nInstall XCode. The easiest way is to open a Terminal window (Applications &gt; Utilities &gt; Terminal.app; or use the Terminal pane in RStudio) and type the following:\nxcode-select --install\nYou will be prompted to confirm the install, and possibly enter your computer password. Do so to complete the installation.\nAlternatively you can:\n\nDownload and install XCode from the Mac AppStore: http://itunes.apple.com/us/app/xcode/id497799835?mt=12\nWithin XCode go to Preferences : Downloads and install the Command Line Tools\n\n\n\nFor Linux\nIf you installed r-base-dev when installing R, you should have all you need to build packages from source. If not, go back to https://cloud.r-project.org/ and follow the instructions for your distribution (Ubuntu and Debian are likely the most common, and install it with sudo apt-get install r-base-dev)."
  },
  {
    "objectID": "setup.html#git",
    "href": "setup.html#git",
    "title": "System Setup ü§ñ",
    "section": "Git",
    "text": "Git\nWe will be learning the use of Git and GitHub for version control and collaboration.\n\nWindows\nCheck if Git is installed by running which git in the Terminal pane in RStudio.\nIf which git didn‚Äôt find Git installed:\n\nDownload and install from https://git-scm.com/downloads\nKeep all the default settings. If asked about ‚ÄúAdjusting your PATH environment‚Äù, make sure to select ‚ÄúGit from the command line and also from 3rd-party software‚Äù.\n\n\nRStudio + Git\n\nOpen RStudio. In the menus go to Tools &gt; Global Options &gt; Git/SVN.\nCheck RStudio has found git under ‚ÄúGit executable‚Äù. If it hasn‚Äôt:\n\nYou may need to click Browse and find the git executable.\nIt may be in C:/Users/[username]/AppData/Local/Programs/Git/\n\n\n\n\nPositron + Git\n\nPositron is smart about finding git, but if it doesn‚Äôt find it automatically:\nIn the menu go to File &gt; Preferences &gt; Settings.\nSearch for ‚ÄúGit Path‚Äù.\n\nClick ‚ÄúEdit in settings.json‚Äù and add the path to the git executable.\nIt may be in C:/Users/[username]/AppData/Local/Programs/Git/cmd/git.exe\n\n\n\n\n\nMac\nCheck if Git is installed by running which git in the Terminal. You should see something like /usr/bin/git, /usr/local/bin/, or /opt/homebrew/bin/git.\nIf you are asked to install the Xcode command line tools, say yes.\nIf which git didn‚Äôt find Git installed, and if you weren‚Äôt prompted to install it, run the following in the Terminal: xcode-select --install\n\n\nIf you do lots of scientific computing and especially if you use command-line programs in the Terminal, we recommend using Homebrew. See brew.sh for installation instructions. To install Git using Homebrew, run the following in the Terminal: brew install git"
  },
  {
    "objectID": "setup.html#github",
    "href": "setup.html#github",
    "title": "System Setup ü§ñ",
    "section": "GitHub",
    "text": "GitHub\nRegister a GitHub account at github.com.\nI highly recommend the book Happy Git with R for advice on setting up and using Git with R [@bryan]."
  },
  {
    "objectID": "setup.html#troubleshooting",
    "href": "setup.html#troubleshooting",
    "title": "System Setup ü§ñ",
    "section": "Troubleshooting",
    "text": "Troubleshooting\nIf you are having issues with the setup please start a discussion on GitHub here."
  }
]