{
  "hash": "b9d87279e471f0797d021cebf3264700",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating Efficient Workflows in R\"\nsubtitle: \"Parks Canada; Ecological Integrity Monitoring Program\"\nauthor: \"Andy Teucher\"\nformat: revealjs\n---\n\n# Getting started with Positron\n\n![](img/positron-logo.png)\n\n<https://positron.posit.co/> \n\n- See \"Migrating from RStudio\" section\n\n## Layout\n\n![](img/user-interface-rstudio-vs-positron.jpeg)\n\n::: footer\n<https://github.com/posit-dev/positron-website/pull/116/>\n:::\n\n## Layout\n\n![](img/user-interface-for-rstudio-migration.jpeg)\n\n::: notes\nThese UI elements are the most novel for RStudio users:\n\nThe Activity bar provides access to different functional capabilities of Positron. Clicking here changes what appears in the Primary side bar.\nThe Primary side bar displays context-specific content based on which icon is clicked in the Activity bar.\n:::\n\n## Keyboard shortcuts\n\nEnable Rstudio keyboard shortcuts via:\n\n`Settings > Workbench > Keybindings: Rstudio Keybindings`\n\n![](img/rstudio-shortcuts-positron.png)\n\n## Command palette\n<br>\n\n### Access all the things\n<br>\n`Ctrl + Shift + P`\n\n## Extensions\n<br>\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n### Pre-installed\n\n- Quarto\n- Air\n\n:::\n\n::: {.column width=\"50%\"}\n\n### Other extensions\n\n- Rainbow csv\n- vscode-pdf\n- Themes\n\n:::\n:::\n\n::: notes\nCommand palette: \"install\". Search \"tomorrow night\".\n:::\n\n## Data Explorer\n\n![](img/data-viewer-iris.png)\n\n\n## What does it mean to be an RStudio **P**roject?\n\nOpen Project = dedicated instance of **RStudio**\n\n-   dedicated **R** process\n-   file browser pointed at Project directory\n-   working directory set to Project directory\n\n. . .\n\n<br>\n\nRStudio leaves notes to itself in `foo.Rproj`\n\n## What does it mean to be a Positron ~~**P**roject~~ Workspace?\n\nOpen Project = dedicated instance of **Positron**\n\n-   dedicated **R** process\n-   file browser pointed at Project directory\n-   working directory set to Project directory\n\n. . .\n\n<br>\n\nOften just a project folder thatâ€™s been opened in its own window via *Open Folder* or similar\n\n-   `.git/` directory\n-   `.Rproj` file\n-   `.vscode/settings.json` file\n-   `_quarto.yml` file\n-   `DESCRIPTION` file\n-   `renv.lock` file\n-   `.here` file\n\n## Start R with a blank slate\n\n:::::: columns\n::: {.column width=\"48%\"}\n-   Save **code** for reproducibility.\n-   When you quit: do not save the workspace to an `.Rdata` file.\n-   When you start: do not reload the workspace from an `.Rdata` file.\n-   In RStudio, set this via `Tools > Global Options`.\n-   Or use `usethis::use_blank_slate()`\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"50%\"}\n![](img/rstudio-blank-slate.png)\n:::\n::::::\n\n*This is the default (and not customizable) in Positron* \n\n## Restart R often\n\n<br>\n\n:::::: columns\n\n::: {.column width=\"48%\"}\nSession -\\> Restart R\n\n![](img/restart-rstudio.png)\n:::\n\n::: {.column width=\"4%\"}\n:::\n\n::: {.column width=\"48%\"}\nWindows\n\n-   `Ctrl + Shift + F10`\n\nMac\n\n-   `Cmd + Shift + 0`\n:::\n\n::::::\n\n## Project initiation: RStudio Project\n\n1.  New folder + make it an RStudio Project\n\n-   `usethis::create_project(\"~/i_am_new\")`\n\n-   File -\\> New Project -\\> New Directory -\\> New Project\n\n2.  Make existing folder into an RStudio Project\n\n-   `usethis::create_project(\"~/i_exist\")`\n\n-   File -\\> New Project -\\> Existing Directory\n\n## Project initiation: Positron Workspace\n\n1.  New folder + make it a workspace\n\n-   `usethis::create_project(\"~/i_am_new\", rstudio = FALSE)`\n\n-   File -\\> New Folder From Template\n\n2.  Open an existing directory as a workspace\n\n-   `usethis::create_project(\"~/i_exist\", rstudio = FALSE)`\n\n-   File -\\> New Project -\\> Existing Directory\n\n*Note: if you don't specify `rstudio = FALSE`, it will create an RStudio `.Rproj` file. This does no harm.*\n\n. . .\n\n::: question\nTry either option now with a folder containing\n:::\n\n# Efficient use of your IDE\n\n## Customizing your IDE\n\n<br>\n\n- Pane layout\n- Themes\n- Fonts\n- Positron extensions\n\n\n## Keyboard shortcuts\n\n### If in doubt, use the command palette: `Ctrl + Shift + P`\n\n## Navigation & Files\n\n-   **Ctrl + Shift + N** - New file\n-   **Ctrl + S** - Save current file\n-   **Ctrl + F** - Find in current file\n-   **Ctrl + Shift + F** - Find in files (global search)\n-   **Ctrl + .** - Go to file/function\n-   **Ctrl + 1** - Focus source editor\n-   **Ctrl + 2** - Focus console\n\n## Code Editing\n\n-   **Ctrl + Shift + C** - Comment/uncomment lines\n-   **Tab** - Indent selection\n-   **Shift + Tab** - Unindent selection\n-   **Alt + Up/Down** - Move line(s) up/down\n-   **Alt + Shift + Up/Down** - Duplicate line(s) ???\n-   **Ctrl + X** - Cut entire line (when no selection)\n\n## Magic of Multiple Cursors\n\n-   **Ctrl + Alt + Up/Down** - Add cursor above/below\n-   **Ctrl + D** - Add next occurrence of selected text (custom)\n\n## Navigation Within Code\n\n-   **Ctrl + Left/Right** - Jump word by word\n-   **Home/End** - Jump to beginning/end of line\n-   **Ctrl + Home/End** - Jump to beginning/end of document\n-   **Ctrl + P** - Jump to matching brace\n\n## R-Specific\n\n-   **Tab** - Auto-complete\n-   **F1** - Show help for function under cursor\n-   **Ctrl + Shift + F10** - Restart R session\n-   **Ctrl + Shift + M** - Insert pipe operator (`%>%` or `|>`)\n-   **Alt + -** - Insert assignment operator (`<-`)\n\n## `.Last.value`\n\nShows last evaluated value in console\n\n### RStudio\n\n- Tools > Global Options > General > Advanced > Show `.Last.value` in environment listing\n\n### Positron\n\nControlled by an option:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::edit_r_profile()\noptions(positron.show_last_value = TRUE)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}